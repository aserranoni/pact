[Info] Starting server
[Debug] ---> {"jsonrpc":"2.0","id":1,"method":"initialize","params":{"processId":38220,"rootPath":"/home/rsoeldner/repo/kadena/pact/","rootUri":"file:///home/rsoeldner/repo/kadena/pact","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"executeCommand":{"dynamicRegistration":false},"workspaceEdit":{"documentChanges":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":false},"configuration":true,"workspaceFolders":true},"textDocument":{"synchronization":{"dynamicRegistration":false,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":false,"completionItem":{"snippetSupport":false,"deprecatedSupport":true,"tagSupport":{"valueSet":[1]}},"contextSupport":true},"hover":{"dynamicRegistration":false,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true}},"references":{"dynamicRegistration":false},"definition":{"dynamicRegistration":false,"linkSupport":true},"declaration":{"dynamicRegistration":false,"linkSupport":true},"implementation":{"dynamicRegistration":false,"linkSupport":true},"typeDefinition":{"dynamicRegistration":false,"linkSupport":true},"documentSymbol":{"dynamicRegistration":false,"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"documentHighlight":{"dynamicRegistration":false},"codeAction":{"dynamicRegistration":false,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"formatting":{"dynamicRegistration":false},"rangeFormatting":{"dynamicRegistration":false},"rename":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":false,"codeDescriptionSupport":false,"tagSupport":{"valueSet":[1,2]}}},"experimental":{}},"workspaceFolders":[{"uri":"file:///home/rsoeldner/repo/kadena/pact","name":"~/repo/kadena/pact/"}]}}
[Debug] <--2-- {"id":1,"jsonrpc":"2.0","result":{"capabilities":{"callHierarchyProvider":false,"codeActionProvider":false,"colorProvider":false,"completionProvider":{"resolveProvider":false},"declarationProvider":false,"definitionProvider":false,"documentFormattingProvider":false,"documentHighlightProvider":false,"documentRangeFormattingProvider":false,"documentSymbolProvider":false,"foldingRangeProvider":false,"hoverProvider":true,"implementationProvider":false,"referencesProvider":false,"renameProvider":false,"selectionRangeProvider":false,"semanticTokensProvider":{"legend":{"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]}},"typeDefinitionProvider":false,"workspace":{},"workspaceSymbolProvider":false}}}
[Debug] ---> {"jsonrpc":"2.0","method":"initialized","params":{}}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":0,"languageId":"pact","text":"(define-namespace 'test (sig-keyset) (sig-keyset))\n(namespace 'test)\n\n(interface iface\n  (defun op:integer ()))\n\n(interface iface2\n  (defpact good:string ()))\n\n(module impl g\n  (implements iface)\n  (defcap g () true)\n  (defun op:integer () 1))\n\n(module testmod g\n\n  @model\n  [\n   ;; need at least some property to kick off fv\n   (property (= 1 1))\n  ]\n\n  (defcap g () true)\n\n  (defschema sch\n    i:integer\n    ;; exercise modref type coercion in schemas\n    m:module{iface})\n\n  (deftable tbl:{sch})\n\n  (defschema test-schema\n    \"test schema\"\n    guard:string)\n\n  (deftable test-table:{test-schema})\n\n  (defcap CAP () @event true)\n\n  (defun alist:[integer] () [ 1 2 ])\n\n  ;; make sure verification works for\n  ;; module references\n  (defpact nested-modref-pact-1:string (m1:module{iface2})\n    (step\n      (+ (m1::good) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n  )\n\n  ;; test principal create/validate for\n  ;; coverage\n  (defun both-guard (ks1 ks2)\n    (enforce-keyset ks1)\n    (enforce-keyset ks2))\n\n  (defun create-principal-test ()\n    (insert test-table \"user\"\n      { \"guard\":\n          (create-principal\n            (create-user-guard\n             (both-guard\n               (read-keyset 'ks1)\n               (read-keyset 'ks2)\n              )))\n      }))\n\n  (defun validate-principal-test ()\n    (validate-principal\n     (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2)))\n     (create-principal\n      (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2))))\n     ))\n\n\n  (defun fun (m:module{iface})\n    @doc \"Exercise FV shims and coercions. Modref arg coerced to string.\"\n    ;; dynamic ref\n    (m::op)\n    ;; unsupported natives\n    (keys tbl)\n    (is-charset CHARSET_ASCII \"abc\")\n    (install-capability (CAP))\n    (emit-event (CAP))\n    (concat [\"a\" \"b\"])\n    (format \"dynamic list {}\" (alist))\n    (enumerate 1 10)\n    (enumerate 1 10 2)\n    (tx-hash)\n    (str-to-list \"abc\")\n    (int-to-str 16 65535)\n    (distinct [1 2 2 3])\n    (diff-time\n     (time \"2021-01-01T00:00:00Z\")\n     (time \"2021-01-01T00:00:00Z\"))\n  )\n\n)\n\n(env-dynref iface impl)\n(verify \"test.testmod\")\n"}}}
[Debug] VFS: opening NormalizedUri (-4618619156077806533) "file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"
[Debug] ---> {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
[Debug] <--2-- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"message":"Namespace defined: test\n","range":{"end":{"character":50,"line":0},"start":{"character":0,"line":0}},"severity":3},{"message":"Namespace set to test\n","range":{"end":{"character":17,"line":1},"start":{"character":0,"line":1}},"severity":3},{"message":"Loaded interface test.iface\n","range":{"end":{"character":24,"line":4},"start":{"character":0,"line":3}},"severity":3},{"message":"Loaded interface test.iface2\n","range":{"end":{"character":27,"line":7},"start":{"character":0,"line":6}},"severity":3},{"message":"Loaded module test.impl, hash l56R1Xpdw3IjNGqgwmHrcbd1Htpzs7aW4HzcPUqqlN0\n","range":{"end":{"character":7,"line":9},"start":{"character":0,"line":9}},"severity":3},{"message":"Loaded module test.testmod, hash ji_HWk6bcaq5gg7V4FaOrDOdzHeCM1aytFNciEmDasU\n","range":{"end":{"character":7,"line":14},"start":{"character":0,"line":14}},"severity":3},{"message":"Added dynamic ref to environment.\n","range":{"end":{"character":23,"line":110},"start":{"character":0,"line":110}},"severity":3},{"message":"Verification of test.testmod succeeded\n","range":{"end":{"character":23,"line":111},"start":{"character":0,"line":111}},"severity":3},{"message":"Unsupported operation: validate-principal: substituting True\n","range":{"end":{"character":13,"line":73},"start":{"character":4,"line":73}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":12,"line":78},"start":{"character":5,"line":78}},"severity":2},{"message":"Unsupported operation: diff-time: substituting 0.0\n","range":{"end":{"character":9,"line":103},"start":{"character":4,"line":103}},"severity":2},{"message":"Unsupported operation: int-to-str: substituting empty string\n","range":{"end":{"character":25,"line":101},"start":{"character":4,"line":101}},"severity":2},{"message":"Unsupported operation: str-to-list: substituting empty string list\n","range":{"end":{"character":23,"line":100},"start":{"character":4,"line":100}},"severity":2},{"message":"Unsupported operation: tx-hash: substituting empty string\n","range":{"end":{"character":13,"line":99},"start":{"character":4,"line":99}},"severity":2},{"message":"Unsupported operation: format: substituting empty string\n","range":{"end":{"character":38,"line":96},"start":{"character":4,"line":96}},"severity":2},{"message":"Unsupported operation: concat: substituting empty string\n","range":{"end":{"character":22,"line":95},"start":{"character":4,"line":95}},"severity":2},{"message":"Unsupported operation: emit-event: substituting True\n","range":{"end":{"character":22,"line":94},"start":{"character":4,"line":94}},"severity":2},{"message":"Unsupported operation: install-capability: substituting empty string\n","range":{"end":{"character":30,"line":93},"start":{"character":4,"line":93}},"severity":2},{"message":"Unsupported operation: is-charset: substituting True\n","range":{"end":{"character":36,"line":92},"start":{"character":4,"line":92}},"severity":2},{"message":"Unsupported operation: keys: substituting empty string list\n","range":{"end":{"character":14,"line":91},"start":{"character":4,"line":91}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":17,"line":64},"start":{"character":10,"line":64}},"severity":2}],"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}
[Debug] ---> {"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":38}}}
[Debug] <--2-- {"id":2,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":8}}}
[Debug] <--2-- {"id":3,"jsonrpc":"2.0","result":{"contents":{"kind":"plaintext","value":"native `format`\n  \n  Interpolate VARS into TEMPLATE using {}.\n  \n  Type:\n  template:string vars:[*] -> string\n  \n  Examples:\n  > (format \"My {} has {}\" [\"dog\" \"fleas\"])\n"}}}
[Debug] ---> {"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":99,"character":0}}}
[Debug] <--2-- {"id":4,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":1},"contentChanges":[{"range":{"start":{"line":97,"character":0},"end":{"line":99,"character":0}},"rangeLength":44,"text":""}]}}
[Debug] ---> {"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":97,"character":0}}}
[Debug] <--2-- {"id":5,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":100,"character":0}}}
[Debug] <--2-- {"id":6,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"text":"(define-namespace 'test (sig-keyset) (sig-keyset))\n(namespace 'test)\n\n(interface iface\n  (defun op:integer ()))\n\n(interface iface2\n  (defpact good:string ()))\n\n(module impl g\n  (implements iface)\n  (defcap g () true)\n  (defun op:integer () 1))\n\n(module testmod g\n\n  @model\n  [\n   ;; need at least some property to kick off fv\n   (property (= 1 1))\n  ]\n\n  (defcap g () true)\n\n  (defschema sch\n    i:integer\n    ;; exercise modref type coercion in schemas\n    m:module{iface})\n\n  (deftable tbl:{sch})\n\n  (defschema test-schema\n    \"test schema\"\n    guard:string)\n\n  (deftable test-table:{test-schema})\n\n  (defcap CAP () @event true)\n\n  (defun alist:[integer] () [ 1 2 ])\n\n  ;; make sure verification works for\n  ;; module references\n  (defpact nested-modref-pact-1:string (m1:module{iface2})\n    (step\n      (+ (m1::good) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n  )\n\n  ;; test principal create/validate for\n  ;; coverage\n  (defun both-guard (ks1 ks2)\n    (enforce-keyset ks1)\n    (enforce-keyset ks2))\n\n  (defun create-principal-test ()\n    (insert test-table \"user\"\n      { \"guard\":\n          (create-principal\n            (create-user-guard\n             (both-guard\n               (read-keyset 'ks1)\n               (read-keyset 'ks2)\n              )))\n      }))\n\n  (defun validate-principal-test ()\n    (validate-principal\n     (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2)))\n     (create-principal\n      (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2))))\n     ))\n\n\n  (defun fun (m:module{iface})\n    @doc \"Exercise FV shims and coercions. Modref arg coerced to string.\"\n    ;; dynamic ref\n    (m::op)\n    ;; unsupported natives\n    (keys tbl)\n    (is-charset CHARSET_ASCII \"abc\")\n    (install-capability (CAP))\n    (emit-event (CAP))\n    (concat [\"a\" \"b\"])\n    (format \"dynamic list {}\" (alist))\n    (tx-hash)\n    (str-to-list \"abc\")\n    (int-to-str 16 65535)\n    (distinct [1 2 2 3])\n    (diff-time\n     (time \"2021-01-01T00:00:00Z\")\n     (time \"2021-01-01T00:00:00Z\"))\n  )\n\n)\n\n(env-dynref iface impl)\n(verify \"test.testmod\")\n","textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}}
[Debug] <--2-- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"message":"Namespace defined: test\n","range":{"end":{"character":50,"line":0},"start":{"character":0,"line":0}},"severity":3},{"message":"Namespace set to test\n","range":{"end":{"character":17,"line":1},"start":{"character":0,"line":1}},"severity":3},{"message":"Loaded interface test.iface\n","range":{"end":{"character":24,"line":4},"start":{"character":0,"line":3}},"severity":3},{"message":"Loaded interface test.iface2\n","range":{"end":{"character":27,"line":7},"start":{"character":0,"line":6}},"severity":3},{"message":"Loaded module test.impl, hash l56R1Xpdw3IjNGqgwmHrcbd1Htpzs7aW4HzcPUqqlN0\n","range":{"end":{"character":7,"line":9},"start":{"character":0,"line":9}},"severity":3},{"message":"Loaded module test.testmod, hash OLw76_rYOTJxfV-wnc0N3OeCrNyCxaTBs0R_aMBjVbg\n","range":{"end":{"character":7,"line":14},"start":{"character":0,"line":14}},"severity":3},{"message":"Added dynamic ref to environment.\n","range":{"end":{"character":23,"line":108},"start":{"character":0,"line":108}},"severity":3},{"message":"Verification of test.testmod succeeded\n","range":{"end":{"character":23,"line":109},"start":{"character":0,"line":109}},"severity":3},{"message":"Unsupported operation: validate-principal: substituting True\n","range":{"end":{"character":13,"line":73},"start":{"character":4,"line":73}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":12,"line":78},"start":{"character":5,"line":78}},"severity":2},{"message":"Unsupported operation: diff-time: substituting 0.0\n","range":{"end":{"character":9,"line":101},"start":{"character":4,"line":101}},"severity":2},{"message":"Unsupported operation: int-to-str: substituting empty string\n","range":{"end":{"character":25,"line":99},"start":{"character":4,"line":99}},"severity":2},{"message":"Unsupported operation: str-to-list: substituting empty string list\n","range":{"end":{"character":23,"line":98},"start":{"character":4,"line":98}},"severity":2},{"message":"Unsupported operation: tx-hash: substituting empty string\n","range":{"end":{"character":13,"line":97},"start":{"character":4,"line":97}},"severity":2},{"message":"Unsupported operation: format: substituting empty string\n","range":{"end":{"character":38,"line":96},"start":{"character":4,"line":96}},"severity":2},{"message":"Unsupported operation: concat: substituting empty string\n","range":{"end":{"character":22,"line":95},"start":{"character":4,"line":95}},"severity":2},{"message":"Unsupported operation: emit-event: substituting True\n","range":{"end":{"character":22,"line":94},"start":{"character":4,"line":94}},"severity":2},{"message":"Unsupported operation: install-capability: substituting empty string\n","range":{"end":{"character":30,"line":93},"start":{"character":4,"line":93}},"severity":2},{"message":"Unsupported operation: is-charset: substituting True\n","range":{"end":{"character":36,"line":92},"start":{"character":4,"line":92}},"severity":2},{"message":"Unsupported operation: keys: substituting empty string list\n","range":{"end":{"character":14,"line":91},"start":{"character":4,"line":91}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":17,"line":64},"start":{"character":10,"line":64}},"severity":2}],"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}
[Debug] ---> {"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":101,"character":0}}}
[Debug] <--2-- {"id":7,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":2},"contentChanges":[{"range":{"start":{"line":100,"character":0},"end":{"line":101,"character":0}},"rangeLength":25,"text":""}]}}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"text":"(define-namespace 'test (sig-keyset) (sig-keyset))\n(namespace 'test)\n\n(interface iface\n  (defun op:integer ()))\n\n(interface iface2\n  (defpact good:string ()))\n\n(module impl g\n  (implements iface)\n  (defcap g () true)\n  (defun op:integer () 1))\n\n(module testmod g\n\n  @model\n  [\n   ;; need at least some property to kick off fv\n   (property (= 1 1))\n  ]\n\n  (defcap g () true)\n\n  (defschema sch\n    i:integer\n    ;; exercise modref type coercion in schemas\n    m:module{iface})\n\n  (deftable tbl:{sch})\n\n  (defschema test-schema\n    \"test schema\"\n    guard:string)\n\n  (deftable test-table:{test-schema})\n\n  (defcap CAP () @event true)\n\n  (defun alist:[integer] () [ 1 2 ])\n\n  ;; make sure verification works for\n  ;; module references\n  (defpact nested-modref-pact-1:string (m1:module{iface2})\n    (step\n      (+ (m1::good) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n  )\n\n  ;; test principal create/validate for\n  ;; coverage\n  (defun both-guard (ks1 ks2)\n    (enforce-keyset ks1)\n    (enforce-keyset ks2))\n\n  (defun create-principal-test ()\n    (insert test-table \"user\"\n      { \"guard\":\n          (create-principal\n            (create-user-guard\n             (both-guard\n               (read-keyset 'ks1)\n               (read-keyset 'ks2)\n              )))\n      }))\n\n  (defun validate-principal-test ()\n    (validate-principal\n     (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2)))\n     (create-principal\n      (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2))))\n     ))\n\n\n  (defun fun (m:module{iface})\n    @doc \"Exercise FV shims and coercions. Modref arg coerced to string.\"\n    ;; dynamic ref\n    (m::op)\n    ;; unsupported natives\n    (keys tbl)\n    (is-charset CHARSET_ASCII \"abc\")\n    (install-capability (CAP))\n    (emit-event (CAP))\n    (concat [\"a\" \"b\"])\n    (format \"dynamic list {}\" (alist))\n    (tx-hash)\n    (str-to-list \"abc\")\n    (int-to-str 16 65535)\n    (diff-time\n     (time \"2021-01-01T00:00:00Z\")\n     (time \"2021-01-01T00:00:00Z\"))\n  )\n\n)\n\n(env-dynref iface impl)\n(verify \"test.testmod\")\n","textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}}
[Debug] <--2-- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"message":"Namespace defined: test\n","range":{"end":{"character":50,"line":0},"start":{"character":0,"line":0}},"severity":3},{"message":"Namespace set to test\n","range":{"end":{"character":17,"line":1},"start":{"character":0,"line":1}},"severity":3},{"message":"Loaded interface test.iface\n","range":{"end":{"character":24,"line":4},"start":{"character":0,"line":3}},"severity":3},{"message":"Loaded interface test.iface2\n","range":{"end":{"character":27,"line":7},"start":{"character":0,"line":6}},"severity":3},{"message":"Loaded module test.impl, hash l56R1Xpdw3IjNGqgwmHrcbd1Htpzs7aW4HzcPUqqlN0\n","range":{"end":{"character":7,"line":9},"start":{"character":0,"line":9}},"severity":3},{"message":"Loaded module test.testmod, hash STr9vNCbrVPOaoF11gpFv6DWmvk8maWMfFlG7JM9_P0\n","range":{"end":{"character":7,"line":14},"start":{"character":0,"line":14}},"severity":3},{"message":"Added dynamic ref to environment.\n","range":{"end":{"character":23,"line":107},"start":{"character":0,"line":107}},"severity":3},{"message":"Verification of test.testmod succeeded\n","range":{"end":{"character":23,"line":108},"start":{"character":0,"line":108}},"severity":3},{"message":"Unsupported operation: validate-principal: substituting True\n","range":{"end":{"character":13,"line":73},"start":{"character":4,"line":73}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":12,"line":78},"start":{"character":5,"line":78}},"severity":2},{"message":"Unsupported operation: diff-time: substituting 0.0\n","range":{"end":{"character":9,"line":100},"start":{"character":4,"line":100}},"severity":2},{"message":"Unsupported operation: int-to-str: substituting empty string\n","range":{"end":{"character":25,"line":99},"start":{"character":4,"line":99}},"severity":2},{"message":"Unsupported operation: str-to-list: substituting empty string list\n","range":{"end":{"character":23,"line":98},"start":{"character":4,"line":98}},"severity":2},{"message":"Unsupported operation: tx-hash: substituting empty string\n","range":{"end":{"character":13,"line":97},"start":{"character":4,"line":97}},"severity":2},{"message":"Unsupported operation: format: substituting empty string\n","range":{"end":{"character":38,"line":96},"start":{"character":4,"line":96}},"severity":2},{"message":"Unsupported operation: concat: substituting empty string\n","range":{"end":{"character":22,"line":95},"start":{"character":4,"line":95}},"severity":2},{"message":"Unsupported operation: emit-event: substituting True\n","range":{"end":{"character":22,"line":94},"start":{"character":4,"line":94}},"severity":2},{"message":"Unsupported operation: install-capability: substituting empty string\n","range":{"end":{"character":30,"line":93},"start":{"character":4,"line":93}},"severity":2},{"message":"Unsupported operation: is-charset: substituting True\n","range":{"end":{"character":36,"line":92},"start":{"character":4,"line":92}},"severity":2},{"message":"Unsupported operation: keys: substituting empty string list\n","range":{"end":{"character":14,"line":91},"start":{"character":4,"line":91}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":17,"line":64},"start":{"character":10,"line":64}},"severity":2}],"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}
[Debug] ---> {"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":100,"character":0}}}
[Debug] <--2-- {"id":8,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":95,"character":22}}}
[Debug] <--2-- {"id":9,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":4},"contentChanges":[{"range":{"start":{"line":95,"character":22},"end":{"line":95,"character":22}},"rangeLength":0,"text":"\n"},{"range":{"start":{"line":96,"character":0},"end":{"line":96,"character":0}},"rangeLength":0,"text":"    "}]}}
[Debug] ---> {"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":4}}}
[Debug] <--2-- {"id":10,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":7},"contentChanges":[{"range":{"start":{"line":96,"character":4},"end":{"line":96,"character":4}},"rangeLength":0,"text":"("},{"range":{"start":{"line":96,"character":5},"end":{"line":96,"character":5}},"rangeLength":0,"text":"f"},{"range":{"start":{"line":96,"character":6},"end":{"line":96,"character":6}},"rangeLength":0,"text":"r"}]}}
[Debug] ---> {"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":7}}}
[Debug] <--2-- {"id":11,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":19},"contentChanges":[{"range":{"start":{"line":96,"character":6},"end":{"line":96,"character":7}},"rangeLength":1,"text":""},{"range":{"start":{"line":96,"character":6},"end":{"line":96,"character":6}},"rangeLength":0,"text":"o"},{"range":{"start":{"line":96,"character":7},"end":{"line":96,"character":7}},"rangeLength":0,"text":"r"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":8}},"rangeLength":0,"text":"m"},{"range":{"start":{"line":96,"character":9},"end":{"line":96,"character":9}},"rangeLength":0,"text":"a"},{"range":{"start":{"line":96,"character":10},"end":{"line":96,"character":10}},"rangeLength":0,"text":"t"},{"range":{"start":{"line":96,"character":11},"end":{"line":96,"character":11}},"rangeLength":0,"text":" "},{"range":{"start":{"line":96,"character":12},"end":{"line":96,"character":12}},"rangeLength":0,"text":"\""},{"range":{"start":{"line":96,"character":13},"end":{"line":96,"character":13}},"rangeLength":0,"text":"a"},{"range":{"start":{"line":96,"character":14},"end":{"line":96,"character":14}},"rangeLength":0,"text":"b"},{"range":{"start":{"line":96,"character":15},"end":{"line":96,"character":15}},"rangeLength":0,"text":"c"},{"range":{"start":{"line":96,"character":16},"end":{"line":96,"character":16}},"rangeLength":0,"text":"\""}]}}
[Debug] ---> {"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":17}}}
[Debug] <--2-- {"id":12,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":23},"contentChanges":[{"range":{"start":{"line":96,"character":17},"end":{"line":96,"character":17}},"rangeLength":0,"text":" "},{"range":{"start":{"line":96,"character":18},"end":{"line":96,"character":18}},"rangeLength":0,"text":"["},{"range":{"start":{"line":96,"character":19},"end":{"line":96,"character":19}},"rangeLength":0,"text":"\""},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"rangeLength":0,"text":"A"}]}}
[Debug] ---> {"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":21}}}
[Debug] <--2-- {"id":13,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":27},"contentChanges":[{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":21}},"rangeLength":1,"text":""},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"rangeLength":0,"text":"a"},{"range":{"start":{"line":96,"character":21},"end":{"line":96,"character":21}},"rangeLength":0,"text":"\""},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":22}},"rangeLength":0,"text":"}"}]}}
[Debug] ---> {"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":23}}}
[Debug] <--2-- {"id":14,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":29},"contentChanges":[{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":23}},"rangeLength":1,"text":""},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":22}},"rangeLength":0,"text":"]"}]}}
[Debug] ---> {"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":23}}}
[Debug] <--2-- {"id":15,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":30},"contentChanges":[{"range":{"start":{"line":96,"character":23},"end":{"line":96,"character":23}},"rangeLength":0,"text":"_"}]}}
[Debug] ---> {"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":24}}}
[Debug] <--2-- {"id":16,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"text":"(define-namespace 'test (sig-keyset) (sig-keyset))\n(namespace 'test)\n\n(interface iface\n  (defun op:integer ()))\n\n(interface iface2\n  (defpact good:string ()))\n\n(module impl g\n  (implements iface)\n  (defcap g () true)\n  (defun op:integer () 1))\n\n(module testmod g\n\n  @model\n  [\n   ;; need at least some property to kick off fv\n   (property (= 1 1))\n  ]\n\n  (defcap g () true)\n\n  (defschema sch\n    i:integer\n    ;; exercise modref type coercion in schemas\n    m:module{iface})\n\n  (deftable tbl:{sch})\n\n  (defschema test-schema\n    \"test schema\"\n    guard:string)\n\n  (deftable test-table:{test-schema})\n\n  (defcap CAP () @event true)\n\n  (defun alist:[integer] () [ 1 2 ])\n\n  ;; make sure verification works for\n  ;; module references\n  (defpact nested-modref-pact-1:string (m1:module{iface2})\n    (step\n      (+ (m1::good) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n  )\n\n  ;; test principal create/validate for\n  ;; coverage\n  (defun both-guard (ks1 ks2)\n    (enforce-keyset ks1)\n    (enforce-keyset ks2))\n\n  (defun create-principal-test ()\n    (insert test-table \"user\"\n      { \"guard\":\n          (create-principal\n            (create-user-guard\n             (both-guard\n               (read-keyset 'ks1)\n               (read-keyset 'ks2)\n              )))\n      }))\n\n  (defun validate-principal-test ()\n    (validate-principal\n     (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2)))\n     (create-principal\n      (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2))))\n     ))\n\n\n  (defun fun (m:module{iface})\n    @doc \"Exercise FV shims and coercions. Modref arg coerced to string.\"\n    ;; dynamic ref\n    (m::op)\n    ;; unsupported natives\n    (keys tbl)\n    (is-charset CHARSET_ASCII \"abc\")\n    (install-capability (CAP))\n    (emit-event (CAP))\n    (concat [\"a\" \"b\"])\n    (format \"abc\" [\"a\"]_\n    (format \"dynamic list {}\" (alist))\n    (tx-hash)\n    (str-to-list \"abc\")\n    (int-to-str 16 65535)\n    (diff-time\n     (time \"2021-01-01T00:00:00Z\")\n     (time \"2021-01-01T00:00:00Z\"))\n  )\n\n)\n\n(env-dynref iface impl)\n(verify \"test.testmod\")\n","textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}}
[Debug] <--2-- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"message":" unexpected\n    EOF, expected: \")\", \",\", \":\", \":=\", (list), [list], atom, bool, dyn-atom,\n    number, string, symbol, {list}\n111 | <EOF> \n    | ^     \n","range":{"end":{"character":0,"line":110},"start":{"character":1,"line":110}},"severity":1}],"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}
[Debug] ---> {"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":24}}}
[Debug] <--2-- {"id":17,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":31},"contentChanges":[{"range":{"start":{"line":96,"character":23},"end":{"line":96,"character":24}},"rangeLength":1,"text":""}]}}
[Debug] ---> {"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":23}}}
[Debug] <--2-- {"id":18,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":32},"contentChanges":[{"range":{"start":{"line":96,"character":23},"end":{"line":96,"character":23}},"rangeLength":0,"text":")"}]}}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"text":"(define-namespace 'test (sig-keyset) (sig-keyset))\n(namespace 'test)\n\n(interface iface\n  (defun op:integer ()))\n\n(interface iface2\n  (defpact good:string ()))\n\n(module impl g\n  (implements iface)\n  (defcap g () true)\n  (defun op:integer () 1))\n\n(module testmod g\n\n  @model\n  [\n   ;; need at least some property to kick off fv\n   (property (= 1 1))\n  ]\n\n  (defcap g () true)\n\n  (defschema sch\n    i:integer\n    ;; exercise modref type coercion in schemas\n    m:module{iface})\n\n  (deftable tbl:{sch})\n\n  (defschema test-schema\n    \"test schema\"\n    guard:string)\n\n  (deftable test-table:{test-schema})\n\n  (defcap CAP () @event true)\n\n  (defun alist:[integer] () [ 1 2 ])\n\n  ;; make sure verification works for\n  ;; module references\n  (defpact nested-modref-pact-1:string (m1:module{iface2})\n    (step\n      (+ (m1::good) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n  )\n\n  ;; test principal create/validate for\n  ;; coverage\n  (defun both-guard (ks1 ks2)\n    (enforce-keyset ks1)\n    (enforce-keyset ks2))\n\n  (defun create-principal-test ()\n    (insert test-table \"user\"\n      { \"guard\":\n          (create-principal\n            (create-user-guard\n             (both-guard\n               (read-keyset 'ks1)\n               (read-keyset 'ks2)\n              )))\n      }))\n\n  (defun validate-principal-test ()\n    (validate-principal\n     (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2)))\n     (create-principal\n      (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2))))\n     ))\n\n\n  (defun fun (m:module{iface})\n    @doc \"Exercise FV shims and coercions. Modref arg coerced to string.\"\n    ;; dynamic ref\n    (m::op)\n    ;; unsupported natives\n    (keys tbl)\n    (is-charset CHARSET_ASCII \"abc\")\n    (install-capability (CAP))\n    (emit-event (CAP))\n    (concat [\"a\" \"b\"])\n    (format \"abc\" [\"a\"])\n    (format \"dynamic list {}\" (alist))\n    (tx-hash)\n    (str-to-list \"abc\")\n    (int-to-str 16 65535)\n    (diff-time\n     (time \"2021-01-01T00:00:00Z\")\n     (time \"2021-01-01T00:00:00Z\"))\n  )\n\n)\n\n(env-dynref iface impl)\n(verify \"test.testmod\")\n","textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}}
[Debug] <--2-- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"message":"Namespace defined: test\n","range":{"end":{"character":50,"line":0},"start":{"character":0,"line":0}},"severity":3},{"message":"Namespace set to test\n","range":{"end":{"character":17,"line":1},"start":{"character":0,"line":1}},"severity":3},{"message":"Loaded interface test.iface\n","range":{"end":{"character":24,"line":4},"start":{"character":0,"line":3}},"severity":3},{"message":"Loaded interface test.iface2\n","range":{"end":{"character":27,"line":7},"start":{"character":0,"line":6}},"severity":3},{"message":"Loaded module test.impl, hash l56R1Xpdw3IjNGqgwmHrcbd1Htpzs7aW4HzcPUqqlN0\n","range":{"end":{"character":7,"line":9},"start":{"character":0,"line":9}},"severity":3},{"message":"Loaded module test.testmod, hash Q2ce9MaEkoSq2NjUcj52wvNcznz5IMeLMb6aX7RSwxo\n","range":{"end":{"character":7,"line":14},"start":{"character":0,"line":14}},"severity":3},{"message":"Added dynamic ref to environment.\n","range":{"end":{"character":23,"line":108},"start":{"character":0,"line":108}},"severity":3},{"message":"Verification of test.testmod succeeded\n","range":{"end":{"character":23,"line":109},"start":{"character":0,"line":109}},"severity":3},{"message":"Unsupported operation: validate-principal: substituting True\n","range":{"end":{"character":13,"line":73},"start":{"character":4,"line":73}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":12,"line":78},"start":{"character":5,"line":78}},"severity":2},{"message":"Unsupported operation: diff-time: substituting 0.0\n","range":{"end":{"character":9,"line":101},"start":{"character":4,"line":101}},"severity":2},{"message":"Unsupported operation: int-to-str: substituting empty string\n","range":{"end":{"character":25,"line":100},"start":{"character":4,"line":100}},"severity":2},{"message":"Unsupported operation: str-to-list: substituting empty string list\n","range":{"end":{"character":23,"line":99},"start":{"character":4,"line":99}},"severity":2},{"message":"Unsupported operation: tx-hash: substituting empty string\n","range":{"end":{"character":13,"line":98},"start":{"character":4,"line":98}},"severity":2},{"message":"Unsupported operation: format: substituting empty string\n","range":{"end":{"character":38,"line":97},"start":{"character":4,"line":97}},"severity":2},{"message":"Unsupported operation: concat: substituting empty string\n","range":{"end":{"character":22,"line":95},"start":{"character":4,"line":95}},"severity":2},{"message":"Unsupported operation: emit-event: substituting True\n","range":{"end":{"character":22,"line":94},"start":{"character":4,"line":94}},"severity":2},{"message":"Unsupported operation: install-capability: substituting empty string\n","range":{"end":{"character":30,"line":93},"start":{"character":4,"line":93}},"severity":2},{"message":"Unsupported operation: is-charset: substituting True\n","range":{"end":{"character":36,"line":92},"start":{"character":4,"line":92}},"severity":2},{"message":"Unsupported operation: keys: substituting empty string list\n","range":{"end":{"character":14,"line":91},"start":{"character":4,"line":91}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":17,"line":64},"start":{"character":10,"line":64}},"severity":2}],"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}
[Debug] ---> {"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":24}}}
[Debug] <--2-- {"id":19,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":97,"character":24}}}
[Debug] <--2-- {"id":20,"jsonrpc":"2.0","result":{"contents":{"kind":"plaintext","value":"native `list`\n  \n  Create list from ELEMS. Deprecated in Pact 2.1.1 with literal list support.\n  \n  Type:\n  elems:* -> [*]\n  \n  Examples:\n  > (list 1 2 3)\n"}}}
[Debug] ---> {"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":24}}}
[Debug] <--2-- {"id":21,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":22}}}
[Debug] <--2-- {"id":22,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"},"position":{"line":96,"character":16}}}
[Debug] <--2-- {"id":23,"jsonrpc":"2.0","result":null}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl","version":35},"contentChanges":[{"range":{"start":{"line":96,"character":16},"end":{"line":96,"character":16}},"rangeLength":0,"text":" "},{"range":{"start":{"line":96,"character":17},"end":{"line":96,"character":17}},"rangeLength":0,"text":"{"},{"range":{"start":{"line":96,"character":18},"end":{"line":96,"character":18}},"rangeLength":0,"text":"}"}]}}
[Debug] ---> {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"text":"(define-namespace 'test (sig-keyset) (sig-keyset))\n(namespace 'test)\n\n(interface iface\n  (defun op:integer ()))\n\n(interface iface2\n  (defpact good:string ()))\n\n(module impl g\n  (implements iface)\n  (defcap g () true)\n  (defun op:integer () 1))\n\n(module testmod g\n\n  @model\n  [\n   ;; need at least some property to kick off fv\n   (property (= 1 1))\n  ]\n\n  (defcap g () true)\n\n  (defschema sch\n    i:integer\n    ;; exercise modref type coercion in schemas\n    m:module{iface})\n\n  (deftable tbl:{sch})\n\n  (defschema test-schema\n    \"test schema\"\n    guard:string)\n\n  (deftable test-table:{test-schema})\n\n  (defcap CAP () @event true)\n\n  (defun alist:[integer] () [ 1 2 ])\n\n  ;; make sure verification works for\n  ;; module references\n  (defpact nested-modref-pact-1:string (m1:module{iface2})\n    (step\n      (+ (m1::good) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n    (step\n      (+ (continue (m1::good)) \"-nested\")\n      )\n  )\n\n  ;; test principal create/validate for\n  ;; coverage\n  (defun both-guard (ks1 ks2)\n    (enforce-keyset ks1)\n    (enforce-keyset ks2))\n\n  (defun create-principal-test ()\n    (insert test-table \"user\"\n      { \"guard\":\n          (create-principal\n            (create-user-guard\n             (both-guard\n               (read-keyset 'ks1)\n               (read-keyset 'ks2)\n              )))\n      }))\n\n  (defun validate-principal-test ()\n    (validate-principal\n     (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2)))\n     (create-principal\n      (create-user-guard\n      (both-guard\n        (read-keyset 'ks1)\n        (read-keyset 'ks2))))\n     ))\n\n\n  (defun fun (m:module{iface})\n    @doc \"Exercise FV shims and coercions. Modref arg coerced to string.\"\n    ;; dynamic ref\n    (m::op)\n    ;; unsupported natives\n    (keys tbl)\n    (is-charset CHARSET_ASCII \"abc\")\n    (install-capability (CAP))\n    (emit-event (CAP))\n    (concat [\"a\" \"b\"])\n    (format \"abc {}\" [\"a\"])\n    (format \"dynamic list {}\" (alist))\n    (tx-hash)\n    (str-to-list \"abc\")\n    (int-to-str 16 65535)\n    (diff-time\n     (time \"2021-01-01T00:00:00Z\")\n     (time \"2021-01-01T00:00:00Z\"))\n  )\n\n)\n\n(env-dynref iface impl)\n(verify \"test.testmod\")\n","textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}}
[Debug] <--2-- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"message":"Namespace defined: test\n","range":{"end":{"character":50,"line":0},"start":{"character":0,"line":0}},"severity":3},{"message":"Namespace set to test\n","range":{"end":{"character":17,"line":1},"start":{"character":0,"line":1}},"severity":3},{"message":"Loaded interface test.iface\n","range":{"end":{"character":24,"line":4},"start":{"character":0,"line":3}},"severity":3},{"message":"Loaded interface test.iface2\n","range":{"end":{"character":27,"line":7},"start":{"character":0,"line":6}},"severity":3},{"message":"Loaded module test.impl, hash l56R1Xpdw3IjNGqgwmHrcbd1Htpzs7aW4HzcPUqqlN0\n","range":{"end":{"character":7,"line":9},"start":{"character":0,"line":9}},"severity":3},{"message":"Loaded module test.testmod, hash 3f2xAJzwdmkyjIWp64HJ0CfDSVO78ji9IYZaEfxD0T4\n","range":{"end":{"character":7,"line":14},"start":{"character":0,"line":14}},"severity":3},{"message":"Added dynamic ref to environment.\n","range":{"end":{"character":23,"line":108},"start":{"character":0,"line":108}},"severity":3},{"message":"Verification of test.testmod succeeded\n","range":{"end":{"character":23,"line":109},"start":{"character":0,"line":109}},"severity":3},{"message":"Unsupported operation: validate-principal: substituting True\n","range":{"end":{"character":13,"line":73},"start":{"character":4,"line":73}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":12,"line":78},"start":{"character":5,"line":78}},"severity":2},{"message":"Unsupported operation: diff-time: substituting 0.0\n","range":{"end":{"character":9,"line":101},"start":{"character":4,"line":101}},"severity":2},{"message":"Unsupported operation: int-to-str: substituting empty string\n","range":{"end":{"character":25,"line":100},"start":{"character":4,"line":100}},"severity":2},{"message":"Unsupported operation: str-to-list: substituting empty string list\n","range":{"end":{"character":23,"line":99},"start":{"character":4,"line":99}},"severity":2},{"message":"Unsupported operation: tx-hash: substituting empty string\n","range":{"end":{"character":13,"line":98},"start":{"character":4,"line":98}},"severity":2},{"message":"Unsupported operation: format: substituting empty string\n","range":{"end":{"character":38,"line":97},"start":{"character":4,"line":97}},"severity":2},{"message":"Unsupported operation: concat: substituting empty string\n","range":{"end":{"character":22,"line":95},"start":{"character":4,"line":95}},"severity":2},{"message":"Unsupported operation: emit-event: substituting True\n","range":{"end":{"character":22,"line":94},"start":{"character":4,"line":94}},"severity":2},{"message":"Unsupported operation: install-capability: substituting empty string\n","range":{"end":{"character":30,"line":93},"start":{"character":4,"line":93}},"severity":2},{"message":"Unsupported operation: is-charset: substituting True\n","range":{"end":{"character":36,"line":92},"start":{"character":4,"line":92}},"severity":2},{"message":"Unsupported operation: keys: substituting empty string list\n","range":{"end":{"character":14,"line":91},"start":{"character":4,"line":91}},"severity":2},{"message":"Unsupported operation: create-principal: substituting empty string\n","range":{"end":{"character":17,"line":64},"start":{"character":10,"line":64}},"severity":2}],"uri":"file:///home/rsoeldner/repo/kadena/pact/tests/pact/fv-shims.repl"}}
[Debug] ---> {"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/rsoeldner/repo/kadena/pa